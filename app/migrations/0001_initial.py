# Generated by Django 4.2.6 on 2023-11-01 12:04

import app.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CarBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('car_brand_date_added', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'indexes': [models.Index(fields=['id'], name='app_carbran_id_10511b_idx')],
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor', models.CharField(default=None, max_length=255)),
                ('make', models.CharField(max_length=100)),
                ('color', models.CharField(default='', max_length=100)),
                ('body_type', models.CharField(default='', max_length=100)),
                ('engine_size', models.CharField(default='', max_length=100)),
                ('location', models.CharField(default='', max_length=254)),
                ('car_image', models.ImageField(blank=True, default='', upload_to='car-images/')),
                ('is_sold', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('description', models.TextField(default='')),
                ('steering_type', models.CharField(choices=[('-SELECT STEERING TYPE-', (('RHD', 'RHD'), ('LHD', 'LHD')))], default='RHD', max_length=20)),
                ('car_type', models.CharField(choices=[('-SELECT CAR TYPE-', (('NEW CAR', 'NEW CAR'), ('LOCALLY USED', 'LOCALLY USED')))], default='NEW', max_length=20)),
                ('transmission', models.CharField(choices=[('-SELECT TRANSMISSION TYPE-', (('AUTOMATIC', 'AUTOMATIC'), ('MANUAL', 'MANUAL')))], default='MANUAL', max_length=20)),
                ('fuel_type', models.CharField(choices=[('-SELECT FUEL TYPE-', (('PETROL', 'PETROL'), ('DIESEL', 'DIESEL')))], default='PETROL', max_length=20)),
                ('drive_type', models.CharField(choices=[('-SELECT DRIVE TYPE-', (('2WD', '2WD'), ('4WD', '4WD'), ('AWD', 'AWD')))], default='2WD', max_length=10)),
                ('deposit_on_hire_purchase', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('doors', models.IntegerField(default=0)),
                ('seats', models.IntegerField(default=0)),
                ('mileage', models.IntegerField(default=0)),
                ('year_of_manufacture', models.CharField(blank=True, default='', max_length=10)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[app.models.cleanDecimal])),
                ('discounted_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[app.models.cleanDecimal])),
                ('buyer_name', models.CharField(blank=True, default='', max_length=100)),
                ('buyer_mobile_no', models.CharField(blank=True, default='', max_length=50)),
                ('posting_paid', models.BooleanField(default=False)),
                ('posting_transaction_id', models.CharField(blank=True, default='INITIAL', max_length=100)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('brand', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='brand_cars', to='app.carbrand')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('name', models.CharField(default='', max_length=255)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExtraCarImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_image', models.ImageField(blank=True, null=True, upload_to='extra-car-images/')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extracarimages', to='app.car')),
            ],
            options={
                'indexes': [models.Index(fields=['id'], name='app_extraca_id_0cdeac_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='car',
            index=models.Index(fields=['id'], name='app_car_id_c44b34_idx'),
        ),
    ]
